name: Build Deterministic Runtimes

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  srtool:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        runtime: ["trappist", "stout"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache runtime target dir
        uses: actions/cache@v3
        with:
          path: "${{ github.workspace }}/runtime/${{ matrix.runtime }}/target"
          key: srtool-target-${{ matrix.runtime }}-${{ github.sha }}
          restore-keys: |
            srtool-target-${{ matrix.runtime }}-
            srtool-target-

      - name: Build ${{ matrix.runtime }} runtime
        id: srtool_build
        uses: chevdor/srtool-actions@v0.7.0
        with:
          chain: ${{ matrix.runtime }}

      - name: Summary
        run: |
          echo Summary:
          echo '${{ steps.srtool_build.outputs.json }}' | jq . > ${{ matrix.runtime }}-srtool-digest.json
          cat ${{ matrix.runtime }}-srtool-digest.json
          cp `dirname ${{ steps.srtool_build.outputs.wasm }}`/*.wasm ./

      # Manual trigger: add artifacts to run
      - name: Archive Runtime
        if: ${{ github.event_name != 'release' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.runtime }}-runtime-${{ github.sha }}
          path: |
            ${{ matrix.runtime }}*.wasm
            ${{ matrix.runtime }}-srtool-digest.json

      # Release published: add artifacts to release
      - name: Add artifacts to release
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## Runtime: `${{ matrix.runtime }}`
            ```
            🏋️ Runtime Size:           ${{ steps.srtool_build.outputs.json.runtimes.compressed.subwasm.size }} bytes
            ```
          append_body: true
          files: |
            ${{ matrix.runtime }}-runtime.compact.compressed.wasm
            ${{ matrix.runtime }}-srtool-digest.json
            

#      - name: Generate info to append to release notes
#        run: |
#          echo
#            "\n## Runtime: `${{ matrix.runtime }}`\n"
#            "```\n"
#            "🏋️ Runtime Size:           $(jq .runtimes.compressed.subwasm.size ${{ matrix.runtime }}-srtool-digest.json) bytes"
#            "🔥 Core Version:           $(jq .runtimes.compressed.subwasm.core_version.specName ${{ matrix.runtime }}-srtool-digest.json)-$(jq .runtimes.compressed.subwasm.core_version.specVersion ${{ matrix.runtime }}-srtool-digest.json)"
#            "🎁 Metadata version:       V$(jq .runtimes.compressed.subwasm.metadata_version ${{ matrix.runtime }}-srtool-digest.json)"
#            "🗳️ system.setCode hash:    $(jq .runtimes.compressed.subwasm.proposal_hash ${{ matrix.runtime }}-srtool-digest.json)"
#            "🗳️ authorizeUpgrade hash:  $(jq .runtimes.compressed.subwasm.parachain_authorize_upgrade_hash ${{ matrix.runtime }}-srtool-digest.json)"
#            "🗳️ Blake2-256 hash:        $(jq .runtimes.compressed.subwasm.blake2_256 ${{ matrix.runtime }}-srtool-digest.json)"
#            "📦 IPFS:                   $(jq .runtimes.compressed.subwasm.ipfs_hash ${{ matrix.runtime }}-srtool-digest.json)"
#            "```\n" > release.md
#          echo release.md